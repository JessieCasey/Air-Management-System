{
	"info": {
		"_postman_id": "a00e824f-bf26-43e8-b8b5-4fd75c16d767",
		"name": "Air-Management-System",
		"description": "The Air Management System API helps you handle air companies in the aviation world. It lets you easily create, get, update, and delete air companies. With strong checks to ensure data is correct and handling errors well, it keeps your data safe and reliable",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18627038"
	},
	"item": [
		{
			"name": "AirCompany",
			"item": [
				{
					"name": "Exceptions",
					"item": [
						{
							"name": "[BAD REQUEST] Validation failed for argument",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"  pm.expect(pm.response.code).to.equal(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Air Canada \",\n    \"companyType\": \"In\",\n    \"foundedAt\": \"2040-01-02\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/air-companies",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"air-companies"
									]
								}
							},
							"response": []
						},
						{
							"name": "[BAD REQUEST] Try to add air company with busy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 400\", function () {",
											"  pm.expect(pm.response.code).to.equal(400);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 2,\n    \"name\": \"Air Company Already\",\n    \"companyType\": \"International\",\n    \"foundedAt\": \"2000-01-04\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/air-companies",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"air-companies"
									]
								}
							},
							"response": []
						},
						{
							"name": "[NOT FOUND] Get Air Company with not unavailable Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 404\", function () {",
											"  pm.expect(pm.response.code).to.equal(404);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/v1/air-companies/421",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"air-companies",
										"421"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Air Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"pm.test(\"Response body has ID field\", function () {",
									"  pm.expect(pm.response.json().id).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"SkyUp Airline\",\n    \"companyType\": \"International\",\n    \"foundedAt\": \"2000-01-02\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/air-companies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"air-companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Air Companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/air-companies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"air-companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Air Company by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response contains required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.include.all.keys('id', 'name', 'companyType', 'foundedAt', 'airplanes', 'flights');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/air-companies/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"air-companies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Air Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Iceland Air 22\",\n    \"companyType\": \"International\",\n    \"foundedAt\": \"2000-01-04\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/air-companies/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"air-companies",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Air Company",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/air-companies/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"air-companies",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Airplanes",
			"item": [
				{
					"name": "Add new Airplane",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"pm.test(\"Response body has ID field\", function () {",
									"  pm.expect(pm.response.json().id).to.not.be.undefined;",
									"});",
									"",
									"pm.test(\"Response contains required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData).to.include.all.keys('id', 'name', 'factorySerialNumber', ",
									"  'airCompanyId', 'numberOfFlights', 'flightDistance', 'fuelCapacity', 'type', 'createdAt');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"F-18\",\n    \"factorySerialNumber\": \"2780141AA2\",\n    \"airCompanyId\": 1,\n    \"numberOfFlights\": 0,\n    \"flightDistance\": 2411,\n    \"fuelCapacity\": 2411,\n    \"type\": \"international\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/airplanes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"airplanes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Move Airplane To Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 204\", function () {",
									"  pm.expect(pm.response.code).to.equal(204);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"F-18\",\n    \"factorySerialNumber\": \"2780141AA3\",\n    \"airCompanyId\": 25,\n    \"numberOfFlights\": 0,\n    \"flightDistance\": 2411,\n    \"fuelCapacity\": 2411,\n    \"type\": \"international\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/airplanes/1/assign?moveToCompanyId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"airplanes",
								"1",
								"assign"
							],
							"query": [
								{
									"key": "moveToCompanyId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flights",
			"item": [
				{
					"name": "Add new Flight",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"pm.test(\"Response body has ID field\", function () {",
									"  pm.expect(pm.response.json().id).to.not.be.undefined;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"airCompanyId\": 1,\n    \"airplaneId\": 1,\n    \"estimatedFlightTimeMinutes\": 100,\n    \"departureCountry\": \"UA\",\n    \"destinationCountry\": \"PL\",\n    \"distance\": 541\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/flights",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"flights"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Flights By Company Name And Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/flights/AirCanada?status=COMPLETED",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"flights",
								"AirCanada"
							],
							"query": [
								{
									"key": "status",
									"value": "COMPLETED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Active Flights Started More Than 24 Hours Ago",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/flights/active/started-more-than-24-hours-ago",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"flights",
								"active",
								"started-more-than-24-hours-ago"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Flights Exceeded Estimated Time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"  pm.expect(pm.response.json()).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/flights/completed/exceeded-estimated-time",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"flights",
								"completed",
								"exceeded-estimated-time"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Flight Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"airCompanyId\": 1,\n    \"airplaneId\": 1,\n    \"departureCountry\": \"UA\",\n    \"destinationCountry\": \"PL\",\n    \"distance\": 541\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/flights/1/status?newStatus=COMPLETED",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"flights",
								"1",
								"status"
							],
							"query": [
								{
									"key": "newStatus",
									"value": "COMPLETED"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}